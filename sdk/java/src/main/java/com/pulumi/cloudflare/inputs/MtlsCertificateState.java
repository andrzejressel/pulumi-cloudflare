// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MtlsCertificateState extends com.pulumi.resources.ResourceArgs {

    public static final MtlsCertificateState Empty = new MtlsCertificateState();

    /**
     * The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Whether this is a CA or leaf certificate. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="ca")
    private @Nullable Output<Boolean> ca;

    /**
     * @return Whether this is a CA or leaf certificate. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<Output<Boolean>> ca() {
        return Optional.ofNullable(this.ca);
    }

    /**
     * Certificate you intend to use with mTLS-enabled services. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="certificates")
    private @Nullable Output<String> certificates;

    /**
     * @return Certificate you intend to use with mTLS-enabled services. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<Output<String>> certificates() {
        return Optional.ofNullable(this.certificates);
    }

    /**
     * **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="expiresOn")
    private @Nullable Output<String> expiresOn;

    /**
     * @return **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<Output<String>> expiresOn() {
        return Optional.ofNullable(this.expiresOn);
    }

    /**
     * **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="issuer")
    private @Nullable Output<String> issuer;

    /**
     * @return **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<Output<String>> issuer() {
        return Optional.ofNullable(this.issuer);
    }

    /**
     * Optional unique name for the certificate. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Optional unique name for the certificate. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The certificate&#39;s private key. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="privateKey")
    private @Nullable Output<String> privateKey;

    /**
     * @return The certificate&#39;s private key. **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<Output<String>> privateKey() {
        return Optional.ofNullable(this.privateKey);
    }

    /**
     * **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="serialNumber")
    private @Nullable Output<String> serialNumber;

    /**
     * @return **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<Output<String>> serialNumber() {
        return Optional.ofNullable(this.serialNumber);
    }

    /**
     * **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="signature")
    private @Nullable Output<String> signature;

    /**
     * @return **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<Output<String>> signature() {
        return Optional.ofNullable(this.signature);
    }

    /**
     * **Modifying this attribute will force creation of a new resource.**
     * 
     */
    @Import(name="uploadedOn")
    private @Nullable Output<String> uploadedOn;

    /**
     * @return **Modifying this attribute will force creation of a new resource.**
     * 
     */
    public Optional<Output<String>> uploadedOn() {
        return Optional.ofNullable(this.uploadedOn);
    }

    private MtlsCertificateState() {}

    private MtlsCertificateState(MtlsCertificateState $) {
        this.accountId = $.accountId;
        this.ca = $.ca;
        this.certificates = $.certificates;
        this.expiresOn = $.expiresOn;
        this.issuer = $.issuer;
        this.name = $.name;
        this.privateKey = $.privateKey;
        this.serialNumber = $.serialNumber;
        this.signature = $.signature;
        this.uploadedOn = $.uploadedOn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MtlsCertificateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MtlsCertificateState $;

        public Builder() {
            $ = new MtlsCertificateState();
        }

        public Builder(MtlsCertificateState defaults) {
            $ = new MtlsCertificateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param ca Whether this is a CA or leaf certificate. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder ca(@Nullable Output<Boolean> ca) {
            $.ca = ca;
            return this;
        }

        /**
         * @param ca Whether this is a CA or leaf certificate. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder ca(Boolean ca) {
            return ca(Output.of(ca));
        }

        /**
         * @param certificates Certificate you intend to use with mTLS-enabled services. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder certificates(@Nullable Output<String> certificates) {
            $.certificates = certificates;
            return this;
        }

        /**
         * @param certificates Certificate you intend to use with mTLS-enabled services. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder certificates(String certificates) {
            return certificates(Output.of(certificates));
        }

        /**
         * @param expiresOn **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder expiresOn(@Nullable Output<String> expiresOn) {
            $.expiresOn = expiresOn;
            return this;
        }

        /**
         * @param expiresOn **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder expiresOn(String expiresOn) {
            return expiresOn(Output.of(expiresOn));
        }

        /**
         * @param issuer **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder issuer(@Nullable Output<String> issuer) {
            $.issuer = issuer;
            return this;
        }

        /**
         * @param issuer **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder issuer(String issuer) {
            return issuer(Output.of(issuer));
        }

        /**
         * @param name Optional unique name for the certificate. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Optional unique name for the certificate. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param privateKey The certificate&#39;s private key. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder privateKey(@Nullable Output<String> privateKey) {
            $.privateKey = privateKey;
            return this;
        }

        /**
         * @param privateKey The certificate&#39;s private key. **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder privateKey(String privateKey) {
            return privateKey(Output.of(privateKey));
        }

        /**
         * @param serialNumber **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder serialNumber(@Nullable Output<String> serialNumber) {
            $.serialNumber = serialNumber;
            return this;
        }

        /**
         * @param serialNumber **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder serialNumber(String serialNumber) {
            return serialNumber(Output.of(serialNumber));
        }

        /**
         * @param signature **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder signature(@Nullable Output<String> signature) {
            $.signature = signature;
            return this;
        }

        /**
         * @param signature **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder signature(String signature) {
            return signature(Output.of(signature));
        }

        /**
         * @param uploadedOn **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder uploadedOn(@Nullable Output<String> uploadedOn) {
            $.uploadedOn = uploadedOn;
            return this;
        }

        /**
         * @param uploadedOn **Modifying this attribute will force creation of a new resource.**
         * 
         * @return builder
         * 
         */
        public Builder uploadedOn(String uploadedOn) {
            return uploadedOn(Output.of(uploadedOn));
        }

        public MtlsCertificateState build() {
            return $;
        }
    }

}
