// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetZonesFilter {
    /**
     * @return Only search for zones in this account.
     * 
     */
    private @Nullable String accountId;
    /**
     * @return The type of search to perform for the `name` value
     * when querying the zone API. Valid values: `&#34;exact&#34;` and `&#34;contains&#34;`. Defaults
     * to `&#34;exact&#34;`.
     * 
     */
    private @Nullable String lookupType;
    /**
     * @return A RE2 compatible regular expression to filter the
     * results. This is performed client side whereas the `name` and `lookup_type`
     * are performed on the Cloudflare server side.
     * 
     */
    private @Nullable String match;
    /**
     * @return A string value to search for.
     * 
     */
    private @Nullable String name;
    /**
     * @return Paused status of the zone to lookup. Valid values are
     * `true` or `false`.
     * 
     */
    private @Nullable Boolean paused;
    /**
     * @return Status of the zone to lookup. Valid values: `&#34;active&#34;`,
     * `&#34;pending&#34;`, `&#34;initializing&#34;`, `&#34;moved&#34;`, `&#34;deleted&#34;`, `&#34;deactivated&#34;` and
     * `&#34;read only&#34;`.
     * 
     */
    private @Nullable String status;

    private GetZonesFilter() {}
    /**
     * @return Only search for zones in this account.
     * 
     */
    public Optional<String> accountId() {
        return Optional.ofNullable(this.accountId);
    }
    /**
     * @return The type of search to perform for the `name` value
     * when querying the zone API. Valid values: `&#34;exact&#34;` and `&#34;contains&#34;`. Defaults
     * to `&#34;exact&#34;`.
     * 
     */
    public Optional<String> lookupType() {
        return Optional.ofNullable(this.lookupType);
    }
    /**
     * @return A RE2 compatible regular expression to filter the
     * results. This is performed client side whereas the `name` and `lookup_type`
     * are performed on the Cloudflare server side.
     * 
     */
    public Optional<String> match() {
        return Optional.ofNullable(this.match);
    }
    /**
     * @return A string value to search for.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Paused status of the zone to lookup. Valid values are
     * `true` or `false`.
     * 
     */
    public Optional<Boolean> paused() {
        return Optional.ofNullable(this.paused);
    }
    /**
     * @return Status of the zone to lookup. Valid values: `&#34;active&#34;`,
     * `&#34;pending&#34;`, `&#34;initializing&#34;`, `&#34;moved&#34;`, `&#34;deleted&#34;`, `&#34;deactivated&#34;` and
     * `&#34;read only&#34;`.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZonesFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountId;
        private @Nullable String lookupType;
        private @Nullable String match;
        private @Nullable String name;
        private @Nullable Boolean paused;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetZonesFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.lookupType = defaults.lookupType;
    	      this.match = defaults.match;
    	      this.name = defaults.name;
    	      this.paused = defaults.paused;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder accountId(@Nullable String accountId) {
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder lookupType(@Nullable String lookupType) {
            this.lookupType = lookupType;
            return this;
        }
        @CustomType.Setter
        public Builder match(@Nullable String match) {
            this.match = match;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder paused(@Nullable Boolean paused) {
            this.paused = paused;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public GetZonesFilter build() {
            final var o = new GetZonesFilter();
            o.accountId = accountId;
            o.lookupType = lookupType;
            o.match = match;
            o.name = name;
            o.paused = paused;
            o.status = status;
            return o;
        }
    }
}
