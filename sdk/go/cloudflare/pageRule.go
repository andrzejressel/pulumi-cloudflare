// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Cloudflare page rule resource.
type PageRule struct {
	s *pulumi.ResourceState
}

// NewPageRule registers a new resource with the given unique name, arguments, and options.
func NewPageRule(ctx *pulumi.Context,
	name string, args *PageRuleArgs, opts ...pulumi.ResourceOpt) (*PageRule, error) {
	if args == nil || args.Actions == nil {
		return nil, errors.New("missing required argument 'Actions'")
	}
	if args == nil || args.Target == nil {
		return nil, errors.New("missing required argument 'Target'")
	}
	if args == nil || args.Zone == nil {
		return nil, errors.New("missing required argument 'Zone'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["actions"] = nil
		inputs["priority"] = nil
		inputs["status"] = nil
		inputs["target"] = nil
		inputs["zone"] = nil
	} else {
		inputs["actions"] = args.Actions
		inputs["priority"] = args.Priority
		inputs["status"] = args.Status
		inputs["target"] = args.Target
		inputs["zone"] = args.Zone
	}
	inputs["zoneId"] = nil
	s, err := ctx.RegisterResource("cloudflare:index/pageRule:PageRule", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &PageRule{s: s}, nil
}

// GetPageRule gets an existing PageRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPageRule(ctx *pulumi.Context,
	name string, id pulumi.ID, state *PageRuleState, opts ...pulumi.ResourceOpt) (*PageRule, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["actions"] = state.Actions
		inputs["priority"] = state.Priority
		inputs["status"] = state.Status
		inputs["target"] = state.Target
		inputs["zone"] = state.Zone
		inputs["zoneId"] = state.ZoneId
	}
	s, err := ctx.ReadResource("cloudflare:index/pageRule:PageRule", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &PageRule{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *PageRule) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *PageRule) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The actions taken by the page rule, options given below.
func (r *PageRule) Actions() *pulumi.Output {
	return r.s.State["actions"]
}

// The priority of the page rule among others for this target, the higher the number the higher the priority as per [API documentation](https://api.cloudflare.com/#page-rules-for-a-zone-create-page-rule).
func (r *PageRule) Priority() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["priority"])
}

// Whether the page rule is active or disabled.
func (r *PageRule) Status() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["status"])
}

// The URL pattern to target with the page rule.
func (r *PageRule) Target() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["target"])
}

// The DNS zone to which the page rule should be added.
func (r *PageRule) Zone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["zone"])
}

// The ID of the zone in which the page rule will be applied.
func (r *PageRule) ZoneId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["zoneId"])
}

// Input properties used for looking up and filtering PageRule resources.
type PageRuleState struct {
	// The actions taken by the page rule, options given below.
	Actions interface{}
	// The priority of the page rule among others for this target, the higher the number the higher the priority as per [API documentation](https://api.cloudflare.com/#page-rules-for-a-zone-create-page-rule).
	Priority interface{}
	// Whether the page rule is active or disabled.
	Status interface{}
	// The URL pattern to target with the page rule.
	Target interface{}
	// The DNS zone to which the page rule should be added.
	Zone interface{}
	// The ID of the zone in which the page rule will be applied.
	ZoneId interface{}
}

// The set of arguments for constructing a PageRule resource.
type PageRuleArgs struct {
	// The actions taken by the page rule, options given below.
	Actions interface{}
	// The priority of the page rule among others for this target, the higher the number the higher the priority as per [API documentation](https://api.cloudflare.com/#page-rules-for-a-zone-create-page-rule).
	Priority interface{}
	// Whether the page rule is active or disabled.
	Status interface{}
	// The URL pattern to target with the page rule.
	Target interface{}
	// The DNS zone to which the page rule should be added.
	Zone interface{}
}
