// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudflare

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a resource which manages Cloudflare custom error pages.
type CustomPages struct {
	s *pulumi.ResourceState
}

// NewCustomPages registers a new resource with the given unique name, arguments, and options.
func NewCustomPages(ctx *pulumi.Context,
	name string, args *CustomPagesArgs, opts ...pulumi.ResourceOpt) (*CustomPages, error) {
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil || args.Url == nil {
		return nil, errors.New("missing required argument 'Url'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["accountId"] = nil
		inputs["state"] = nil
		inputs["type"] = nil
		inputs["url"] = nil
		inputs["zoneId"] = nil
	} else {
		inputs["accountId"] = args.AccountId
		inputs["state"] = args.State
		inputs["type"] = args.Type
		inputs["url"] = args.Url
		inputs["zoneId"] = args.ZoneId
	}
	s, err := ctx.RegisterResource("cloudflare:index/customPages:CustomPages", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &CustomPages{s: s}, nil
}

// GetCustomPages gets an existing CustomPages resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomPages(ctx *pulumi.Context,
	name string, id pulumi.ID, state *CustomPagesState, opts ...pulumi.ResourceOpt) (*CustomPages, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["accountId"] = state.AccountId
		inputs["state"] = state.State
		inputs["type"] = state.Type
		inputs["url"] = state.Url
		inputs["zoneId"] = state.ZoneId
	}
	s, err := ctx.ReadResource("cloudflare:index/customPages:CustomPages", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &CustomPages{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *CustomPages) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *CustomPages) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The account ID where the custom pages should be
// updated. Either `account_id` or `zone_id` must be provided. If
// `account_id` is present, it will override the zone setting.
func (r *CustomPages) AccountId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["accountId"])
}

// Managed state of the custom page. Must be one of
// `default`, `customised`. If the value is `default` it will be removed
// from the Terraform state management.
func (r *CustomPages) State() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["state"])
}

// The type of custom page you wish to update. Must
// be one of `basic_challenge`, `waf_challenge`, `waf_block`,
// `ratelimit_block`, `country_challenge`, `ip_block`, `under_attack`,
// `500_errors`, `1000_errors`, `always_online`.
func (r *CustomPages) Type() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["type"])
}

// URL of where the custom page source is located.
func (r *CustomPages) Url() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["url"])
}

// The zone ID where the custom pages should be
// updated. Either `zone_id` or `account_id` must be provided.
func (r *CustomPages) ZoneId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["zoneId"])
}

// Input properties used for looking up and filtering CustomPages resources.
type CustomPagesState struct {
	// The account ID where the custom pages should be
	// updated. Either `account_id` or `zone_id` must be provided. If
	// `account_id` is present, it will override the zone setting.
	AccountId interface{}
	// Managed state of the custom page. Must be one of
	// `default`, `customised`. If the value is `default` it will be removed
	// from the Terraform state management.
	State interface{}
	// The type of custom page you wish to update. Must
	// be one of `basic_challenge`, `waf_challenge`, `waf_block`,
	// `ratelimit_block`, `country_challenge`, `ip_block`, `under_attack`,
	// `500_errors`, `1000_errors`, `always_online`.
	Type interface{}
	// URL of where the custom page source is located.
	Url interface{}
	// The zone ID where the custom pages should be
	// updated. Either `zone_id` or `account_id` must be provided.
	ZoneId interface{}
}

// The set of arguments for constructing a CustomPages resource.
type CustomPagesArgs struct {
	// The account ID where the custom pages should be
	// updated. Either `account_id` or `zone_id` must be provided. If
	// `account_id` is present, it will override the zone setting.
	AccountId interface{}
	// Managed state of the custom page. Must be one of
	// `default`, `customised`. If the value is `default` it will be removed
	// from the Terraform state management.
	State interface{}
	// The type of custom page you wish to update. Must
	// be one of `basic_challenge`, `waf_challenge`, `waf_block`,
	// `ratelimit_block`, `country_challenge`, `ip_block`, `under_attack`,
	// `500_errors`, `1000_errors`, `always_online`.
	Type interface{}
	// URL of where the custom page source is located.
	Url interface{}
	// The zone ID where the custom pages should be
	// updated. Either `zone_id` or `account_id` must be provided.
	ZoneId interface{}
}
