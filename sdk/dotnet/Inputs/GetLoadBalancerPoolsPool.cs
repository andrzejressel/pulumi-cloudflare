// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class GetLoadBalancerPoolsPoolArgs : global::Pulumi.InvokeArgs
    {
        [Input("checkRegions", required: true)]
        private List<string>? _checkRegions;

        /// <summary>
        /// List of regions (specified by region code) from which to run health checks. Empty means every Cloudflare data center (the default), but requires an Enterprise plan. Region codes can be found [here](https://support.cloudflare.com/hc/en-us/articles/115000540888-Load-Balancing-Geographic-Regions).
        /// </summary>
        public List<string> CheckRegions
        {
            get => _checkRegions ?? (_checkRegions = new List<string>());
            set => _checkRegions = value;
        }

        /// <summary>
        /// The RFC3339 timestamp of when the load balancer was created.
        /// </summary>
        [Input("createdOn", required: true)]
        public string CreatedOn { get; set; } = null!;

        /// <summary>
        /// Brief description of the Load Balancer Pool intention.
        /// </summary>
        [Input("description", required: true)]
        public string Description { get; set; } = null!;

        /// <summary>
        /// Whether this pool is enabled. Disabled pools will not receive traffic and are excluded from health checks.
        /// </summary>
        [Input("enabled", required: true)]
        public bool Enabled { get; set; }

        /// <summary>
        /// ID for this load balancer pool.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// Latitude this pool is physically located at; used for proximity steering.
        /// </summary>
        [Input("latitude", required: true)]
        public double Latitude { get; set; }

        [Input("loadSheddings", required: true)]
        private List<Inputs.GetLoadBalancerPoolsPoolLoadSheddingArgs>? _loadSheddings;

        /// <summary>
        /// Setting for controlling load shedding for this pool.
        /// </summary>
        public List<Inputs.GetLoadBalancerPoolsPoolLoadSheddingArgs> LoadSheddings
        {
            get => _loadSheddings ?? (_loadSheddings = new List<Inputs.GetLoadBalancerPoolsPoolLoadSheddingArgs>());
            set => _loadSheddings = value;
        }

        /// <summary>
        /// Longitude this pool is physically located at; used for proximity steering.
        /// </summary>
        [Input("longitude", required: true)]
        public double Longitude { get; set; }

        /// <summary>
        /// Minimum number of origins that must be healthy for this pool to serve traffic.
        /// </summary>
        [Input("minimumOrigins", required: true)]
        public int MinimumOrigins { get; set; }

        /// <summary>
        /// The RFC3339 timestamp of when the load balancer was last modified.
        /// </summary>
        [Input("modifiedOn", required: true)]
        public string ModifiedOn { get; set; } = null!;

        /// <summary>
        /// ID of the Monitor to use for health checking origins within this pool.
        /// </summary>
        [Input("monitor", required: true)]
        public string Monitor { get; set; } = null!;

        /// <summary>
        /// Short name (tag) for the pool.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Email address to send health status notifications to. Multiple emails are set as a comma delimited list.
        /// </summary>
        [Input("notificationEmail", required: true)]
        public string NotificationEmail { get; set; } = null!;

        [Input("origins", required: true)]
        private List<Inputs.GetLoadBalancerPoolsPoolOriginArgs>? _origins;

        /// <summary>
        /// The list of origins within this pool.
        /// </summary>
        public List<Inputs.GetLoadBalancerPoolsPoolOriginArgs> Origins
        {
            get => _origins ?? (_origins = new List<Inputs.GetLoadBalancerPoolsPoolOriginArgs>());
            set => _origins = value;
        }

        public GetLoadBalancerPoolsPoolArgs()
        {
        }
        public static new GetLoadBalancerPoolsPoolArgs Empty => new GetLoadBalancerPoolsPoolArgs();
    }
}
