// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudflare.Inputs
{

    public sealed class GetLoadBalancerPoolsPoolInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("checkRegions", required: true)]
        private InputList<string>? _checkRegions;

        /// <summary>
        /// List of regions (specified by region code) from which to run health checks. Empty means every Cloudflare data center (the default), but requires an Enterprise plan. Region codes can be found [here](https://support.cloudflare.com/hc/en-us/articles/115000540888-Load-Balancing-Geographic-Regions).
        /// </summary>
        public InputList<string> CheckRegions
        {
            get => _checkRegions ?? (_checkRegions = new InputList<string>());
            set => _checkRegions = value;
        }

        /// <summary>
        /// The RFC3339 timestamp of when the load balancer was created.
        /// </summary>
        [Input("createdOn", required: true)]
        public Input<string> CreatedOn { get; set; } = null!;

        /// <summary>
        /// Brief description of the Load Balancer Pool intention.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// Whether this pool is enabled. Disabled pools will not receive traffic and are excluded from health checks.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// ID for this load balancer pool.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Latitude this pool is physically located at; used for proximity steering.
        /// </summary>
        [Input("latitude", required: true)]
        public Input<double> Latitude { get; set; } = null!;

        [Input("loadSheddings", required: true)]
        private InputList<Inputs.GetLoadBalancerPoolsPoolLoadSheddingInputArgs>? _loadSheddings;

        /// <summary>
        /// Setting for controlling load shedding for this pool.
        /// </summary>
        public InputList<Inputs.GetLoadBalancerPoolsPoolLoadSheddingInputArgs> LoadSheddings
        {
            get => _loadSheddings ?? (_loadSheddings = new InputList<Inputs.GetLoadBalancerPoolsPoolLoadSheddingInputArgs>());
            set => _loadSheddings = value;
        }

        /// <summary>
        /// Longitude this pool is physically located at; used for proximity steering.
        /// </summary>
        [Input("longitude", required: true)]
        public Input<double> Longitude { get; set; } = null!;

        /// <summary>
        /// Minimum number of origins that must be healthy for this pool to serve traffic.
        /// </summary>
        [Input("minimumOrigins", required: true)]
        public Input<int> MinimumOrigins { get; set; } = null!;

        /// <summary>
        /// The RFC3339 timestamp of when the load balancer was last modified.
        /// </summary>
        [Input("modifiedOn", required: true)]
        public Input<string> ModifiedOn { get; set; } = null!;

        /// <summary>
        /// ID of the Monitor to use for health checking origins within this pool.
        /// </summary>
        [Input("monitor", required: true)]
        public Input<string> Monitor { get; set; } = null!;

        /// <summary>
        /// Short name (tag) for the pool.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Email address to send health status notifications to. Multiple emails are set as a comma delimited list.
        /// </summary>
        [Input("notificationEmail", required: true)]
        public Input<string> NotificationEmail { get; set; } = null!;

        [Input("origins", required: true)]
        private InputList<Inputs.GetLoadBalancerPoolsPoolOriginInputArgs>? _origins;

        /// <summary>
        /// The list of origins within this pool.
        /// </summary>
        public InputList<Inputs.GetLoadBalancerPoolsPoolOriginInputArgs> Origins
        {
            get => _origins ?? (_origins = new InputList<Inputs.GetLoadBalancerPoolsPoolOriginInputArgs>());
            set => _origins = value;
        }

        public GetLoadBalancerPoolsPoolInputArgs()
        {
        }
        public static new GetLoadBalancerPoolsPoolInputArgs Empty => new GetLoadBalancerPoolsPoolInputArgs();
    }
}
